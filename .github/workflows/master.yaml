name: Master
on: 
  push:
    branches:
      - master
    
jobs:
  build-quotes:
    #TODO: only execute when file changes in functions/**/*
    name: Build quotes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: functions
      - working-directory: functions
        run: yarn build
      - working-directory: functions
        run: yarn test
      - name: Archive firebase functions
        uses: actions/upload-artifact@master
        with:
          name: quotes-functions
          path: functions/lib
      - uses: bahmutov/npm-install@v1
      - run: yarn build --configuration="production"
      - name: Archive quotes
        uses: actions/upload-artifact@master
        with:
          name: quotes
          path: dist/quotes/
  
  deploy-on-staging:
    #TODO: only execute when file changes in functions/**/*
    name: Deploy quotes to staging
    runs-on: ubuntu-latest
    needs: build-quotes
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: quotes-functions
          path: functions/lib
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: functions
      - uses: bahmutov/npm-install@v1
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: quotes
          path: dist/quotes
      - run: yarn publish-env
        env:
          FIREBASE_API_KEY: ${{ secrets.STAGING_FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.STAGING_FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.STAGING_FIREBASE_DATABASE_URL }}
          FIREBASE_PROJECT_ID: ${{ secrets.STAGING_FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.STAGING_FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.STAGING_FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.STAGING_FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.STAGING_FIREBASE_MEASUREMENT_ID }}
          ANGULAR_PRODUCTION: ${{ secrets.STAGING_ANGULAR_PRODUCTION }}
      - name: Deploy to firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.STAGING_FIREBASE_PROJECT_ID }}

  ui-tests:
    name: UI Tests
    needs: deploy-on-staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1
      - name: Cypress Run
        uses: cypress-io/github-action@v1
        with:
          install: true
          start: yarn start
          build: yarn -v # serve already builds
          group: 'E2E Tests'
          record: true
          parallel: true
          wait-on: 'http://localhost:4200'
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_KEY }}
          CYPRESS_TEST_UID: ${{ secrets.STAGING_TEST_UID }}
          # FIREBASE_CONFIG: ${{ secrets.STAGING_FIREBASE_CONFIG }}
          FIREBASE_TOKEN: ${{ secrets.STAGING_FIREBASE_TOKEN }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          SERVICE_ACCOUNT: ${{ secrets.STAGING_SERVICE_ACCOUNT }}
          # start firebase
          FIREBASE_API_KEY: ${{ secrets.STAGING_FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.STAGING_FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.STAGING_FIREBASE_DATABASE_URL }}
          FIREBASE_PROJECT_ID: ${{ secrets.STAGING_FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.STAGING_FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.STAGING_FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.STAGING_FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.STAGING_FIREBASE_MEASUREMENT_ID }}
          ANGULAR_PRODUCTION: ${{ secrets.STAGING_ANGULAR_PRODUCTION }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: ui-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: bahmutov/npm-install@v1
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn semantic-release

  deploy-on-prod:
    #TODO: only execute when file changes in functions/**/*
    name: Deploy quotes to prod
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: quotes-functions
          path: functions/lib
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: functions
      - uses: bahmutov/npm-install@v1
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: quotes
          path: dist/quotes
      - run: yarn publish-env
        env:
          FIREBASE_API_KEY: ${{ secrets.PROD_FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.PROD_FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.PROD_FIREBASE_DATABASE_URL }}
          FIREBASE_PROJECT_ID: ${{ secrets.PROD_FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.PROD_FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.PROD_FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.PROD_FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.PROD_FIREBASE_MEASUREMENT_ID }}
          ANGULAR_PRODUCTION: ${{ secrets.PROD_ANGULAR_PRODUCTION }}
      - name: Deploy to firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.PROD_FIREBASE_PROJECT_ID }}
  
  # firebase-prod:
  #   #TODO: only execute when file changes in functions/**/*
  #   name: Deploy firebase to prod
  #   runs-on: ubuntu-latest
  #   needs: release
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v1
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: '10.x'
  #     - uses: bahmutov/npm-install@v1
  #       with:
  #         working-directory: functions
  #     - working-directory: functions
  #       run: yarn build
  #     - working-directory: functions
  #       run: yarn test
  #     - uses: bahmutov/npm-install@v1
  #     - run: yarn build
  #       env:
  #         FIREBASE_API_KEY: ${{ secrets.PROD_FIREBASE_API_KEY }}
  #         FIREBASE_AUTH_DOMAIN: ${{ secrets.PROD_FIREBASE_AUTH_DOMAIN }}
  #         FIREBASE_DATABASE_URL: ${{ secrets.PROD_FIREBASE_DATABASE_URL }}
  #         FIREBASE_PROJECT_ID: ${{ secrets.PROD_FIREBASE_PROJECT_ID }}
  #         FIREBASE_STORAGE_BUCKET: ${{ secrets.PROD_FIREBASE_STORAGE_BUCKET }}
  #         FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.PROD_FIREBASE_MESSAGING_SENDER_ID }}
  #         FIREBASE_APP_ID: ${{ secrets.PROD_FIREBASE_APP_ID }}
  #         FIREBASE_MEASUREMENT_ID: ${{ secrets.PROD_FIREBASE_MEASUREMENT_ID }}
  #         ANGULAR_PRODUCTION: ${{ secrets.PROD_ANGULAR_PRODUCTION }}
  #     - name: Deploy to firebase
  #       uses: w9jds/firebase-action@master
  #       with:
  #         args: deploy
  #       env:
  #         FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  #         PROJECT_ID: ${{ secrets.PROD_FIREBASE_PROJECT_ID }}

  # release-and-deploy-netlify:
  #   runs-on: ubuntu-latest
  #   needs: release
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: "12.x"
  #     - uses: bahmutov/npm-install@v1
  #     - run: yarn build
  #       env:
  #         FIREBASE_API_KEY: ${{ secrets.PROD_FIREBASE_API_KEY }}
  #         FIREBASE_AUTH_DOMAIN: ${{ secrets.PROD_FIREBASE_AUTH_DOMAIN }}
  #         FIREBASE_DATABASE_URL: ${{ secrets.PROD_FIREBASE_DATABASE_URL }}
  #         FIREBASE_PROJECT_ID: ${{ secrets.PROD_FIREBASE_PROJECT_ID }}
  #         FIREBASE_STORAGE_BUCKET: ${{ secrets.PROD_FIREBASE_STORAGE_BUCKET }}
  #         FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.PROD_FIREBASE_MESSAGING_SENDER_ID }}
  #         FIREBASE_APP_ID: ${{ secrets.PROD_FIREBASE_APP_ID }}
  #         FIREBASE_MEASUREMENT_ID: ${{ secrets.PROD_FIREBASE_MEASUREMENT_ID }}
  #         ANGULAR_PRODUCTION: ${{ secrets.PROD_ANGULAR_PRODUCTION }}
  #     - name: run Lighthouse CI
  #       run: |
  #         npm install -g @lhci/cli@0.3.x
  #         lhci autorun --upload.target=temporary-public-storage || echo "LHCI failed!"
  #     - uses: netlify/actions/cli@master
  #       env:
  #         NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  #         NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  #       with:
  #         args: deploy --dir=dist/quotes --prod
  #         secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'
