name: master

on:
  push:
    branches:
    - master-DISABLED

jobs:
#   ui-tests:
#     name: UI Tests
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         # the actual items in the array do not matter,
#         # just the number - to force CI to sping 3 copies
#         # of the current job in parallel
#         machines: [1, 2, 3]
#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v1

#       # Install is run separatley from test so that dependencies are available
#       # for other steps
#       - name: Install Dependencies
#         uses: cypress-io/github-action@v1
#         with:
#           # just perform install
#           runTests: false
#       - name: Build Test Environment Config
#         env:
#           FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
#           TEST_UID: ${{ secrets.TEST_UID }}
#           SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
#         run: |
#           $(yarn bin)/cypress-firebase createTestEnvFile $TEST_ENV
#       # Cypress action manages installing/caching npm dependencies and Cypress binary.
#       - name: Cypress Run
#         uses: cypress-io/github-action@v1
#         with:
#           # we have already installed all dependencies above
#           install: false
#           start: yarn start
#           group: 'E2E Tests'
#           record: true
#           parallel: true
#         env:
#           # pass the Dashboard record key as an environment variable
#           CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_KEY }}
#           FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
#           GITHUB_HEAD_REF: ${{ github.head_ref }}
  build-and-deploy-functions:
    name: Deploy functions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - working-directory: functions
        run: yarn install --frozen-lockfile
      - working-directory: functions
        run: yarn build
      - name: Deploy functions to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions,firestore:rules
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: quotes-553ed
  deploy-netlify:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: yarn install
      - run: yarn ng build --prod
      - name: run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.3.x
          lhci autorun --upload.target=temporary-public-storage || echo "LHCI failed!"
      - uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=dist/quotes --prod
          secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'
